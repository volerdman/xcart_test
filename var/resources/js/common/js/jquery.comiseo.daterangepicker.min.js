(function($,window,undefined){var uniqueId=0;$.widget('comiseo.daterangepicker',{version:'0.5.0',options:{presetRanges:[{text:'Today',dateStart:function(){return moment()},dateEnd:function(){return moment()}},{text:'Yesterday',dateStart:function(){return moment().subtract('days',1)},dateEnd:function(){return moment().subtract('days',1)}},{text:'Last 7 Days',dateStart:function(){return moment().subtract('days',6)},dateEnd:function(){return moment()}},{text:'Last Week (Mo-Su)',dateStart:function(){return moment().subtract('days',7).isoWeekday(1)},dateEnd:function(){return moment().subtract('days',7).isoWeekday(7)}},{text:'Month to Date',dateStart:function(){return moment().startOf('month')},dateEnd:function(){return moment()}},{text:'Previous Month',dateStart:function(){return moment().subtract('month',1).startOf('month')},dateEnd:function(){return moment().subtract('month',1).endOf('month')}},{text:'Year to Date',dateStart:function(){return moment().startOf('year')},dateEnd:function(){return moment()}}],initialText:'Select date range...',icon:'ui-icon-triangle-1-s',applyButtonText:'Apply',clearButtonText:'Clear',cancelButtonText:'Cancel',rangeSplitter:' - ',dateFormat:'M d, yy',altFormat:'yy-mm-dd',verticalOffset:0,mirrorOnCollision:true,autoFitCalendars:true,applyOnMenuSelect:true,open:null,close:null,change:null,clear:null,cancel:null,onOpen:null,onClose:null,onChange:null,onClear:null,datepickerOptions:{numberOfMonths:3,maxDate:0}},_create:function(){this._dateRangePicker=buildDateRangePicker(this.element,this,this.options)},_destroy:function(){this._dateRangePicker.destroy()},_setOptions:function(options){this._super(options);this._dateRangePicker.enforceOptions()},open:function(){this._dateRangePicker.open()},close:function(){this._dateRangePicker.close()},setRange:function(range){this._dateRangePicker.setRange(range)},getRange:function(){return this._dateRangePicker.getRange()},clearRange:function(){this._dateRangePicker.clearRange()},widget:function(){return this._dateRangePicker.getContainer()}})
function buildTriggerButton($originalElement,classnameContext,options){var $self,id
function fixReferences(){id='drp_autogen'+ uniqueId++;$('label[for="'+$originalElement.attr('id')+'"]').attr('for',id)}
function init(){fixReferences();$self=$('<button type="button"></button>').addClass(classnameContext+'-triggerbutton').attr({title:$originalElement.attr('title'),tabindex:$originalElement.attr('tabindex'),id:id}).button({icons:{secondary:options.icon},label:options.initialText})}
function getLabel(){return $self.button('option','label')}
function setLabel(value){$self.button('option','label',value)}
function reset(){$originalElement.val('').change();setLabel(options.initialText)}
function enforceOptions(){$self.button('option',{icons:{secondary:options.icon},label:options.initialText})};init();return{getElement:function(){return $self},getLabel:getLabel,setLabel:setLabel,reset:reset,enforceOptions:enforceOptions}}
function buildPresetsMenu(classnameContext,options,onClick){var $self,$menu
function init(){$self=$('<div></div>').addClass(classnameContext+'-presets');$menu=$('<ul></ul>');$.each(options.presetRanges,function(){$('<li><a href="#">'+this.text+'</a></li>').data('dateStart',this.dateStart).data('dateEnd',this.dateEnd).click(onClick).appendTo($menu)});$self.append($menu);$menu.menu().data('ui-menu').delay=0};init();return{getElement:function(){return $self}}}
function buildCalendar(classnameContext,options){var $self,range={start:null,end:null}
function init(){$self=$('<div></div>',{'class':classnameContext+'-calendar ui-widget-content'});$self.datepicker($.extend({},options.datepickerOptions,{beforeShowDay:beforeShowDay,onSelect:onSelectDay}));updateAtMidnight()}
function enforceOptions(){$self.datepicker('option',$.extend({},options.datepickerOptions,{beforeShowDay:beforeShowDay,onSelect:onSelectDay}))}
function onSelectDay(dateText,instance){var dateFormat=options.datepickerOptions.dateFormat||$.datepicker._defaults.dateFormat,selectedDate=$.datepicker.parseDate(dateFormat,dateText);if(!range.start||range.end){range.start=selectedDate;range.end=null}else if(selectedDate<range.start){range.end=range.start;range.start=selectedDate}else range.end=selectedDate;if(options.datepickerOptions.hasOwnProperty('onSelect'))options.datepickerOptions.onSelect(dateText,instance)}
function beforeShowDay(date){var result=[true,range.start&&((+date===+range.start)||(range.end&&range.start<=date&&date<=range.end))?'ui-state-highlight':''],userResult=[true,'',''];if(options.datepickerOptions.hasOwnProperty('beforeShowDay'))userResult=options.datepickerOptions.beforeShowDay(date);return[result[0]&&userResult[0],result[1]+' '+userResult[1],userResult[2]]}
function updateAtMidnight(){setTimeout(function(){refresh();updateAtMidnight()},moment().endOf('day')-moment())}
function scrollToRangeStart(){if(range.start)$self.datepicker('setDate',range.start)}
function refresh(){$self.datepicker('refresh');$self.datepicker('setDate',null)}
function reset(){range={start:null,end:null};refresh()};init();return{getElement:function(){return $self},scrollToRangeStart:function(){return scrollToRangeStart()},getRange:function(){return range},setRange:function(value){range=value;refresh()},refresh:refresh,reset:reset,enforceOptions:enforceOptions}}
function buildButtonPanel(classnameContext,options,handlers){var $self,closeButton
function init(){$self=$('<div></div>').addClass(classnameContext+'-buttonpanel');closeButton=$('<button type="button" class="close-button"></button>').button();$self.append(closeButton);bindEvents()}
function enforceOptions(){}
function bindEvents(){if(handlers)if(closeButton)closeButton.click(handlers.onApply)};init();return{getElement:function(){return $self},enforceOptions:enforceOptions}}
function buildDateRangePicker($originalElement,instance,options){var classname='comiseo-daterangepicker',$container,$mask,triggerButton,presetsMenu,calendar,buttonPanel,isOpen=false,autoFitNeeded=false,LEFT=0,RIGHT=1,TOP=2,BOTTOM=3,sides=['left','right','top','bottom'],hSide=RIGHT,vSide=null
function init(){triggerButton=buildTriggerButton($originalElement,classname,options);presetsMenu=buildPresetsMenu(classname,options,usePreset);calendar=buildCalendar(classname,options);autoFit.numberOfMonths=options.datepickerOptions.numberOfMonths;if(autoFit.numberOfMonths instanceof Array)options.autoFitCalendars=false;buttonPanel=buildButtonPanel(classname,options,{onApply:function(event){close(event)},onClear:function(event){close(event);clearRange(event)},onCancel:function(event){instance._trigger('cancel',event,{instance:instance});close(event);reset()}});render();autoFit();reset();bindEvents()}
function render(){$container=$('<div></div>',{'class':classname+' '+classname+'-'+sides[hSide]+' ui-widget ui-widget-content ui-corner-all ui-front'}).append($('<div></div>',{'class':classname+'-main ui-widget-content'}).append(presetsMenu.getElement()).append(calendar.getElement())).append(buttonPanel.getElement()).hide();$originalElement.after(triggerButton.getElement());$mask=$('<div></div>',{'class':'ui-front '+classname+'-mask'}).hide();$('body').append($mask).append($container)}
function autoFit(){if(options.autoFitCalendars){var maxWidth=$(window).width(),initialWidth=$container.outerWidth(true),$calendar=calendar.getElement(),numberOfMonths=$calendar.datepicker('option','numberOfMonths'),initialNumberOfMonths=numberOfMonths;if(initialWidth>maxWidth){while(numberOfMonths>1&&$container.outerWidth(true)>maxWidth)$calendar.datepicker('option','numberOfMonths',--numberOfMonths);if(numberOfMonths!==initialNumberOfMonths)autoFit.monthWidth=(initialWidth-$container.outerWidth(true))/(initialNumberOfMonths-numberOfMonths)}else while(numberOfMonths<autoFit.numberOfMonths&&(maxWidth-$container.outerWidth(true))>=autoFit.monthWidth)$calendar.datepicker('option','numberOfMonths',++numberOfMonths);reposition();autoFitNeeded=false}}
function destroy(){$container.remove();triggerButton.getElement().remove();$originalElement.show()}
function bindEvents(){triggerButton.getElement().click(toggle);triggerButton.getElement().keydown(keyPressTriggerOpenOrClose);$mask.click(function(event){close(event)});$(window).resize(function(){isOpen?autoFit():autoFitNeeded=true})}
function formatRangeForDisplay(range,forHidden){var dateFormat=options.dateFormat,enFormat=$.datepicker.regional['en'];return $.datepicker.formatDate(dateFormat,range.start,forHidden?enFormat:[])+options.rangeSplitter+$.datepicker.formatDate(dateFormat,range.end,forHidden?enFormat:[])}
function formatRange(range){var dateFormat=options.altFormat,formattedRange={};formattedRange.start=$.datepicker.formatDate(dateFormat,range.start);formattedRange.end=$.datepicker.formatDate(dateFormat,range.end);return JSON.stringify(formattedRange)}
function parseRange(text){var dateFormat=options.dateFormat,range=null;if(text)try{range=[];text.split(options.rangeSplitter).forEach(function(value){var key='start';if(range.hasOwnProperty('start'))key='end';range[key]=$.datepicker.parseDate(dateFormat,value,$.datepicker.regional['en'])})}catch(e){};return range}
function reset(){var range=getRange();if(range){triggerButton.setLabel(formatRangeForDisplay(range));$originalElement.val(formatRangeForDisplay(range)).change();calendar.setRange(range)}else calendar.reset()}
function setRange(value,event){var range=value||calendar.getRange();if(!range.start)return;if(!range.end)range.end=range.start;value&&calendar.setRange(range);triggerButton.setLabel(formatRangeForDisplay(range));$originalElement.val(formatRangeForDisplay(range)).change();$originalElement.siblings('.daterange-value-input').val(formatRangeForDisplay(range,true));if(options.onChange)options.onChange();instance._trigger('change',event,{instance:instance})}
function getRange(){return parseRange($originalElement.siblings('.daterange-value-input').val())}
function clearRange(event){triggerButton.reset();calendar.reset();$originalElement.siblings('.daterange-value-input').val('');if(options.onClear)options.onClear();instance._trigger('clear',event,{instance:instance})}
function usePreset(event){var $this=$(this),startDate=$this.data('dateStart')(),endDate=$this.data('dateEnd')();if(startDate===null&&endDate===null){clearRange()}else{var start=startDate.startOf('day').toDate(),end=endDate.startOf('day').toDate();calendar.setRange({start:start,end:end})};if(options.applyOnMenuSelect){close(event);setRange(null,event)};return false}
function reposition(){$container.position({my:'left top',at:'left bottom'+(options.verticalOffset<0?options.verticalOffset:'+'+options.verticalOffset),of:triggerButton.getElement(),collision:'flipfit flipfit',using:function(coords,feedback){var containerCenterX=feedback.element.left+feedback.element.width/2,triggerButtonCenterX=feedback.target.left+feedback.target.width/2,prevHSide=hSide,last,containerCenterY=feedback.element.top+feedback.element.height/2,triggerButtonCenterY=feedback.target.top+feedback.target.height/2,prevVSide=vSide,vFit;hSide=(containerCenterX>triggerButtonCenterX)?RIGHT:LEFT;if(hSide!==prevHSide){if(options.mirrorOnCollision){last=(hSide===LEFT)?presetsMenu:calendar;$container.children().first().append(last.getElement())};$container.removeClass(classname+'-'+sides[prevHSide]);$container.addClass(classname+'-'+sides[hSide])};$container.css({left:coords.left,top:coords.top});vSide=(containerCenterY>triggerButtonCenterY)?BOTTOM:TOP;if(vSide!==prevVSide){if(prevVSide!==null)triggerButton.getElement().removeClass(classname+'-'+sides[prevVSide]);triggerButton.getElement().addClass(classname+'-'+sides[vSide])};vFit=vSide===BOTTOM&&feedback.element.top-feedback.target.top!==feedback.target.height+options.verticalOffset||vSide===TOP&&feedback.target.top-feedback.element.top!==feedback.element.height+options.verticalOffset;triggerButton.getElement().toggleClass(classname+'-vfit',vFit)}})}
function killEvent(event){event.preventDefault();event.stopPropagation()}
function keyPressTriggerOpenOrClose(event){switch(event.which){case $.ui.keyCode.UP:case $.ui.keyCode.DOWN:killEvent(event);open(event);return;case $.ui.keyCode.ESCAPE:killEvent(event);close(event);reset();return;case $.ui.keyCode.TAB:close(event);return}}
function open(event){if(!isOpen){triggerButton.getElement().addClass(classname+'-active');$mask.show();isOpen=true;autoFitNeeded&&autoFit();calendar.scrollToRangeStart();$container.show();reposition()};if(options.onOpen)options.onOpen();$originalElement.addClass("focus");instance._trigger('open',event,{instance:instance})}
function close(event){if(isOpen){setRange(null,event);$container.hide();$mask.hide();triggerButton.getElement().removeClass(classname+'-active');isOpen=false};if(options.onClose)options.onClose();$originalElement.removeClass("focus");instance._trigger('close',event,{instance:instance})}
function toggle(event){if(isOpen){close(event);reset()}else open(event)}
function getContainer(){return $container}
function enforceOptions(){var oldPresetsMenu=presetsMenu;presetsMenu=buildPresetsMenu(classname,options,usePreset);oldPresetsMenu.getElement().replaceWith(presetsMenu.getElement());calendar.enforceOptions();buttonPanel.enforceOptions();triggerButton.enforceOptions();var range=getRange();if(range)triggerButton.setLabel(formatRangeForDisplay(range))};init();return{toggle:toggle,destroy:destroy,open:open,close:close,setRange:setRange,getRange:getRange,clearRange:clearRange,reset:reset,enforceOptions:enforceOptions,getContainer:getContainer}}})(jQuery,window)